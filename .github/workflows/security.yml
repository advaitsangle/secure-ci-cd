name: Security Checks

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  actions: read

jobs:
  gitleaks:
    name: Gitleaks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Gitleaks
        run: |
          curl -sSL https://github.com/gitleaks/gitleaks/releases/download/v8.24.0/gitleaks_8.24.0_linux_x64.tar.gz -o gitleaks.tar.gz
          tar -xzf gitleaks.tar.gz gitleaks
          sudo mv gitleaks /usr/local/bin/

      - name: Run Gitleaks
        run: gitleaks detect --source . --report-format sarif --report-path gitleaks.sarif || true

      - name: Upload Gitleaks Report
        uses: actions/upload-artifact@v4
        with:
          name: gitleaks-report
          path: gitleaks.sarif

  # pip_audit:
  #   name: pip-audit
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/setup-python@v5
  #       with:
  #         python-version: '3.11'
  #     - run: pip install --upgrade pip-audit

  #     - name: Run pip-audit
  #       run: pip-audit -r requirements.txt -f json -o pip-audit.json || true

  #     - name: Upload pip-audit Report
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: pip-audit-report
  #         path: pip-audit.json

  pip_audit:
    name: pip-audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - run: pip install --upgrade pip-audit

      - name: Run pip-audit
        run: pip-audit -r requirements.txt -f json -o pip-audit.json || true

      - name: Convert pip-audit JSON to SARIF
        run: |
          python - <<'PY'
          import json

          with open("pip-audit.json") as f:
              results = json.load(f)

          sarif = {
              "version": "2.1.0",
              "runs": [{
                  "tool": {
                      "driver": {
                          "name": "pip-audit",
                          "informationUri": "https://github.com/pypa/pip-audit",
                          "rules": []
                      }
                  },
                  "results": []
              }]
          }

          rules = []
          results_list = []

          for pkg in results:
              name = pkg.get("name")
              version = pkg.get("version")
              for vuln in pkg.get("vulns", []):
                  rule_id = vuln.get("id", "UNKNOWN")
                  description = vuln.get("description", "")
                  aliases = ", ".join(vuln.get("aliases", []))
                  fix_versions = ", ".join(vuln.get("fix_versions", []))

                  # Add to rules
                  rules.append({
                      "id": rule_id,
                      "shortDescription": {"text": f"{name} {version} vulnerable"},
                      "fullDescription": {"text": description},
                      "helpUri": rule_id,
                      "properties": {
                          "aliases": aliases,
                          "fix_versions": fix_versions
                      }
                  })

                  # Add to results
                  results_list.append({
                      "ruleId": rule_id,
                      "message": {"text": f"{name} {version} vulnerable ({rule_id})"},
                      "locations": [{
                          "physicalLocation": {
                              "artifactLocation": {"uri": "requirements.txt"}
                          }
                      }]
                  })

          sarif["runs"][0]["tool"]["driver"]["rules"] = rules
          sarif["runs"][0]["results"] = results_list

          with open("pip-audit.sarif", "w") as f:
              json.dump(sarif, f, indent=2)
          PY

      - name: Upload pip-audit SARIF to Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: pip-audit.sarif

      - name: Upload pip-audit artifact
        uses: actions/upload-artifact@v4
        with:
          name: pip-audit-report
          path: pip-audit.json


  semgrep:
    name: Semgrep
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Semgrep
        run: pip install semgrep

      - name: Run Semgrep
        run: semgrep --config=p/ci --severity=ERROR --json --output=semgrep.json || true

      - name: Upload Semgrep Report
        uses: actions/upload-artifact@v4
        with:
          name: semgrep-report
          path: semgrep.json

